name: Docker Build, Scan, and Dummy Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t my-app .

    - name: Run npm install, build, and test inside Docker
      run: |
        docker run --rm my-app npm install
        docker run --rm my-app npm run build
        docker run --rm my-app npm run test || true

    - name: Copy lcov.info if exists
      run: |
        docker create --name temp-container my-app
        docker cp temp-container:/app/build/reports/coverage/api-tests/lcov.info ./api-lcov.info || echo "lcov.info bulunamadı, atlandı."
        docker rm temp-container

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: api-lcov.info

    - name: Install Semgrep
      run: |
        pip install semgrep

    - name: Run Semgrep (SamGrep) and generate SARIF output
      run: |
        semgrep scan --config auto --sarif > semgrep-results.sarif || echo "Semgrep taramasında uyarılar bulundu."

    - name: Upload Semgrep SARIF
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-sarif
        path: semgrep-results.sarif

    - name: Install Syft
      run: |
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Run Syft (dependency scan) and upload result
      run: |
        syft docker:my-app -o json > syft-deps.json

    - name: Upload Syft Output
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: syft-deps
        path: syft-deps.json

    - name: Install GitLeaks
      run: |
        curl -sSfL https://raw.githubusercontent.com/gitleaks/gitleaks/main/install.sh | sh -s -- -b /usr/local/bin

    - name: Run GitLeaks
      run: |
        gitleaks detect --source . --report-format sarif --report-path gitleaks-results.sarif || echo "GitLeaks taramasında uyarılar bulundu."

    - name: Upload GitLeaks SARIF
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-sarif
        path: gitleaks-results.sarif

    - name: Dummy Deploy Step
      run: |
        echo "Starting dummy deployment..."
        sleep 5
        echo "✅ Dummy deployment successful!"
